import os, asyncio, logging
from aiogram import Bot
from aiogram.types import Message, FSInputFile, InputMediaDocument
from aiogram.enums import ParseMode
from aiogram.utils.keyboard import InlineKeyboardBuilder
from core.data.sql import get_fileinfo
from core.util.file import price_alg
from docx2pdf import convert as d2p


ALLOWED_EXTENSIONS = {'.pdf', '.doc', '.docx'}

async def sendfileinfo(message:Message, bot:Bot):
    await bot.send_photo(message.chat.id,FSInputFile('core\\data\\files\\resources\\start.jpg'),caption=
f'–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–µ—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª.\n\
\n<i>–ü—Ä–∏–Ω–∏–º–∞–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:</i>\n<code>.pdf .doc .docx</code>\n\
\n–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏,\
–¥–∞–ª–µ–µ –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –ø–µ—á–∞—Ç–∏.', 
parse_mode=ParseMode.HTML)

async def sendfile(message:Message, bot:Bot):
    if message.document.file_size <= 10485760:
        name, ext = os.path.splitext(message.document.file_name)
        if ext in ALLOWED_EXTENSIONS:
            if await get_fileinfo(message.document.file_unique_id) != None:
                await message.reply(f'<i>–§–∞–π–ª <code>{name}</code> —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ø–µ—á–∞—Ç—å!</i>',
                                    parse_mode=ParseMode.HTML)
            else:
                path = f'core\\data\\files\\temp\\{message.from_user.id}'
                if not os.path.exists(path):os.makedirs(path)
                pdf = f'{path}\\{name}.pdf'
                tempath = f'{path}\\{message.document.file_name}'
                file_id = message.document.file_id
                file_info = await bot.get_file(file_id)
                file_path = file_info.file_path
                downloaded_file = await bot.download_file(file_path)
                with open(tempath, "wb") as new_file:
                    new_file.write(downloaded_file.read())
                    
                msg = await bot.send_document(message.chat.id, file_id, 
                                    caption=f'<i>–§–∞–π–ª <code>{name}</code> –ø—Ä–∏–Ω—è—Ç!</i>',
                                    parse_mode=ParseMode.HTML)
                await asyncio.sleep(2)
                if ext != '.pdf':
                    await bot.edit_message_caption(message.chat.id, msg.message_id,
                                        caption=f'<i>–§–∞–π–ª: <code>{name}</code> –ø—Ä–∏–Ω—è—Ç!\
                                        \n\n<b>–ü—Ä–æ–∏–∑–≤–æ–∂—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é {ext} --> .pdf</b></i>',
                                        parse_mode=ParseMode.HTML)

                    d2p(tempath)
                    os.remove(tempath)
                        
                    msg = await bot.edit_message_media(InputMediaDocument(media=FSInputFile(pdf),
                                        caption=f'<i>–§–∞–π–ª: <code>{name}</code> –ø—Ä–∏–Ω—è—Ç!\
                                        \n\n<b>–ü—Ä–æ–∏–∑–≤–æ–∂—É –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏...</b></i>',
                                        parse_mode=ParseMode.HTML),
                                        message.chat.id, msg.message_id)
                                        
                await bot.edit_message_caption(message.chat.id, msg.message_id,
                                    caption=f'<i>–§–∞–π–ª: <code>{name}</code> –ø—Ä–∏–Ω—è—Ç!\
                                    \n\n<b>–ü—Ä–æ–∏–∑–≤–æ–∂—É –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏...</b></i>',
                                    parse_mode=ParseMode.HTML)
                
                pages, fill = await price_alg(pdf)
                if pages == 0:
                    await bot.delete_message(message.chat.id, msg.message_id)
                    await bot.send_message(message.chat.id,'ü§°', protect_content=True)
                else:
                    price = f'{(pages+fill*50):.2f}'

                    newfile = InlineKeyboardBuilder()
                    newfile.button(text='‚úó –û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'newfile:cancel')
                    newfile.button(text='‚úì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data=f'newfile:accept:{price}')
                    newfile.adjust(2)


                    await bot.edit_message_caption(message.chat.id, msg.message_id,
                                        caption=f'<i>–§–∞–π–ª: <code>{name}</code>{ext}\n\
                                        \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤: <code>{pages}</code>\
                                        \n–°—Ä–µ–¥–Ω—è—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å: <code>{int(fill*100/pages)}%</code>\
                                        \nC—Ç–æ–∏–º–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏: <code>{price}</code></i> ‚ÇΩ',
                                        parse_mode=ParseMode.HTML, reply_markup=newfile.as_markup())
                os.remove(pdf)
        else:
            await message.reply(
                f'<i><b>–û–π, —Ñ–∞–π–ª –Ω–µ —Ç–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞!</b>\
                \n\n–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ:</i>\
                \n<b>–§–∞–π–ª—ã –º–µ–Ω–µ–µ</b> <code>10</code> –º–±\
                \n<code>.pdf .doc .docx</code>', parse_mode=ParseMode.HTML)
    else:
        await message.reply(
                f'<i><b>–û–π, —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π!</b>\
                \n\n–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ:</i>\
                \n<b>–§–∞–π–ª—ã –º–µ–Ω–µ–µ</b> <code>10</code> –º–±\
                \n<code>.pdf .doc .docx</code>', parse_mode=ParseMode.HTML)